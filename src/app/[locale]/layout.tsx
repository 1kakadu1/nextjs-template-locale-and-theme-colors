import { routing } from '@/i18n/routing';
import type { Metadata } from 'next';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { getTranslations } from 'next-intl/server';
import { cookies } from 'next/headers';
import { notFound } from 'next/navigation';
import { RoutesPath } from '@/@types';
import { Footer } from '@/components/footer';
import { Header } from '@/components/header';
import { fontManrope, workSansFont } from '../fonts';
import '../globals.scss';

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
};

export default async function RootLayout({
	children,
	params,
}: Readonly<{
	children: React.ReactNode;
	params: Promise<{ locale: string }>;
}>) {
	const { locale } = await params;
	const cookieStore = await cookies();
	const theme = cookieStore.get('theme')?.value || 'light';
	const t = await getTranslations({ locale, namespace: 'base' });
	if (!hasLocale(routing.locales, locale)) {
		notFound();
	}

	const CATEGORIES = [
		{ label: 'Category 1', href: RoutesPath.home },
		{ label: 'Category 1', href: RoutesPath.home },
		{ label: 'Category 2', href: RoutesPath.home },
		{ label: 'Category 3', href: RoutesPath.home },
		{ label: 'Category 4', href: RoutesPath.home },
	];
	return (
		<html
			lang={locale}
			data-theme={theme}
		>
			<body className={`${fontManrope.variable} ${workSansFont.variable}`}>
				<NextIntlClientProvider>
					<Header />
					{children}
					<Footer categories={CATEGORIES} />
				</NextIntlClientProvider>
			</body>
		</html>
	);
}
